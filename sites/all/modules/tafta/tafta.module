<?php

/**
 * Implements hook permission().
 */

//function alertes_permission() {
//  return array(
//    'Afficher les alertes' => array(
//      'title' => t('Afficher les alertes'),
//      'description' => t('afficher les alertes pour tout utilisateur.'),
//    ),
//  );
//}

$_SESSION['myurl'] = drupal_get_path_alias();

function alertes_block_info() { 
  return array( 
    'nombreAlerte' => array( 
      'info' => t('Nombre d alertes par jour'),
      'cache' => DRUPAL_NO_CACHE, 
      ),
    'resumedesalertes' => array( 
      'info' => t('les dernieres alertes'),
      'cache' => DRUPAL_NO_CACHE, 
      ),
    'nomad08redeyef' => array( 
      'info' => t('Nomad08 - Redeyef'),
      'cache' => DRUPAL_NO_CACHE, 
      ),
    'socialmedia' => array( 
      'info' => t('Réseaux sociaux'),
      'cache' => DRUPAL_NO_CACHE, 
      ),
    ); 
}


function alertes_block_view($delta = '') {
  /**
   * Bloc qui affiche le nombre d'alerte par jour
  */
  if($delta == 'nombreAlerte'){
    $nombreAlerte = 0;
    $today = date('Y-m-d') ;
    
    $nombreAlerte = get_nombre_alertes($today);
    if($nombreAlerte == null){
      return array(
        'subject' => t('Alertes'),
        'content' => sprintf('<center><div style="font-size:25px;">%s <br/>'
                    . '<a href="#" style="font-size:14px" >Signaler une alerte</a></div></center>',$nombreAlerte),
       );
    }else{
      // si c'est un utilisateur anonyme on redirige vers alerte spontannée
      if(!($GLOBALS['user']->uid)){
        return array(
          'subject' => t('Alertes'),
          'content' => sprintf('<center><div style="font-size:25px;">%s <br/>'
                    . '<a href="/node/30" style="font-size:14px" >Signaler une alerte</a></div></center>',$nombreAlerte),
        );
      // sinon on redirige vers alerte normale  
      }else{
        return array(
          'subject' => t('Alertes'),
          'content' => sprintf('<center><div style="font-size:25px;">%s <br/>'
                    . '<a href="/node/31" style="font-size:14px" >Signaler une alerte</a></div></center>',$nombreAlerte),
          );
      }
    }
  }
  
  if($delta == 'resumedesalertes'){
    $header = array(t('Date'),t('Gouvernorat'),t('Municipalité'));
    $rows = construire_resume_alerte();
    $output = theme('table',array('header'=> $header, 'rows' => $rows));
        return array(
          'subject' => t('Résumé des alertes'),
          'content' => sprintf($output.'<br/><a href="/alerteslistuser" target="_blank">+ voir toutes les alertes<a>')
          );
  }
  if($delta == 'nomad08redeyef'){
        return array(
          'subject' => t('Nomad08 Redeyef'),
          'content' => sprintf('<a href="/node/34" target="_blank">Qui sommes nous ?</a><br/>'
              . '<a href="http://www.nomad08.org/" target="_blank">Visitez notre site web</a>'),
          );
  }
  if($delta == 'socialmedia'){
        return array(
          'subject' => t('Réseaux sociaux'),
          'content' => sprintf('<a href="https://twitter.com/WATCHWATER_TN" target="_blank" class="reseau_sociaux_footer" >
                <i class="fa fa-twitter"></i>
            </a>&nbsp; &nbsp;
            <a href="https://www.facebook.com/Observatoire-Tunisien-de-lEau-1698293203718522" target="_blank" class="reseau_sociaux_footer">
                <i class="fa fa-facebook"></i>
            </a>&nbsp; &nbsp;
            <a href="https://www.instagram.com/watchwater.tn/" target="_blank" class="reseau_sociaux_footer">
                <i class="fa fa-instagram"></i>
            </a>&nbsp; &nbsp;
            <a href="https://plus.google.com/112447885057574821950" target="_blank" class="reseau_sociaux_footer">
                <i class="fa fa-google-plus"></i>
            </a>&nbsp; &nbsp;
            <a href="https://www.youtube.com/channel/UCuM7P0ROUkpnO7x41iSKpyQ" target="_blank" class="reseau_sociaux_footer">
                <i class="fa fa-youtube"></i>
            </a>'),
          );
  }
  return array();
}
   
function get_nombre_alertes($today) {
  $query = db_select('webform_submitted_data', 'al');
  $query
        ->fields('al',array('data'))
        ->condition('data',array($today),'IN');
  return $query->countQuery()->execute()->fetchField();
  
}

/**
 * Construire résumé des alertes 
 */
function construire_resume_alerte() {
      //  *************    variables utilisées ****************
    
    // tableau des alertes rendues
    $rows    = array();
    // liste des gouvernements
    $rowGou = array();
    // liste des municipalités
    $rowMun = array();
    // liste des dates
    $rowDates = array();
    // tableau contenant les états des alertes
    $state = array();
    
    // *************  corp de la fontion  *****************
    $query = db_select('webform_submitted_data', 'al');
    $query
        ->fields('al',array('nid','sid','cid','data'))
        ->condition('nid',array(20,21),'IN')
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    
    // récuperer les états des alertes
    $state = get_states();
    
    foreach ($results AS $result) {
       switch ($result->nid) {
         // cas d'une alerte signalé par un alerteur
         case 20:
           if($result->cid == 1){
             $rowGou[] = $result->data;
           }
           if($result->cid == 2){
             $rowMun[] = $result->data;
           }
           if($result->cid == 6){
             $rowDates[] = $result->data;
           }
           break;
         // cas d'une alerte spontannée  
         case 21:
          if($state[$result->sid] == 2){ 
            if($result->cid == 4){
              $rowGou[] = $result->data;
            }
            if($result->cid == 5){
              $rowMun[] = $result->data;
            }
            if($result->cid == 12){
              $rowDates[] = $result->data;
            }
          }
           break;
         default:
           break;
       }
    }
    
    // construire tableau non trié 
    $rows = contruire_tableau_non_trie_resume($rows,$rowGou,$rowMun,$rowDates);
    
    // trier les aletes par date
    $rows = tri_row_date($rows);
    
    // construire tableau non trié 
    if($rowGou == NULL){
      $rows_resume[]=array("aucune alertes n'a été soumise","","");
    }else{
      $rows_resume = construire_tableau_trie_resume($rows,$rowGou);
    }
  return $rows_resume;
}

function construire_tableau_trie_resume($rows,$rowsGou) {
    
      // construction de la table des alertes
      $longuer_tableau = sizeof($rowsGou);
      if($longuer_tableau > 5)$longuer_tableau =5;
      
      for ($i = 0; $i < $longuer_tableau; $i++) {
        $rows_resume[] = array(
          $rows[$i][0],
          $rows[$i][1],
          $rows[$i][2]
            );
          
      }
    
    return $rows_resume;
}
function tafta_menu() {
  
  $items = array();
  
    $items['alerteslistuser'] = array(
      'title' => 'La liste des alertes',
      'access arguments' =>  array('access content'),
      'page callback' => 'alertes_submissions',
    );
  
    $items['alerteslistuserdesactive'] = array(
      'title' => 'La liste des alertes désactivées',
      'access arguments' =>  array('access content'),
      'page callback' => 'alertes_submissions_desactive',
      'access callback' => 'alerteslistuserdesactive_access',
    );
    
    $items['changeretat/%/editetat'] = array(
      'title' => 'Modifier une alerte',
      'access arguments' =>  array('access content'),
      'page callback' => 'alerte_activer',
      'page arguments' => array(1),
    );
    
    $items['changeretat/%/delete'] = array(
      'title' => 'Supprimer une alerte',
      'access arguments' =>  array('access content'),
      'page callback' => 'alerte_supprimer',
      'page arguments' => array(1),
    );
    
    $items['mesalertes'] = array(
      'title' => 'Mes alertes',
      'access arguments' =>  array('access content'),
      'page callback' => 'alerte_user',
    );
    
     $items['mapdesalertes'] = array(
      'title' => 'Carte des alertes',
      'access arguments' =>  array('access content'),
      'page callback' => 'showmapdesalertes',
    );
     $items['cartehorstafta'] = array(
      'title' => 'Carte des hors TAFTA',
      'access arguments' =>  array('access content'),
      'page callback' => 'showcartehorstafta',
    );
     $items['maptaftajson']=array(
       'access arguments' =>  array('access content'),
       "page callback"=>'alertes_geolocation_submissions_tafta'
     );
     $items['mapjson']=array(
       'access arguments' =>  array('access content'),
       "page callback"=>'alertes_geolocation_submissions'
     );
    
    return $items;
  }
  
// carte des alertes watchwater  
function alertes_theme() {
    return array("mapdesalertes"=>array(
            'template' => 'mapdesalertes',
            'path' => drupal_get_path('module', 'alertes') . '/templates',
        ));
}

/*function alertes_preprocess_mapdesalertes(&$variables) {
  drupal_add_css("http://openlayers.org/en/v3.14.2/css/ol.css", array('group' => CSS_DEFAULT, 'every_page' => TRUE));

  drupal_add_js('http://openlayers.org/en/v3.14.2/build/ol.js', 'external');
}*/

function showmapdesalertes() {
    $module_path = drupal_get_path('module', 'alertes');
  //  drupal_add_js($module_path . '/bootstrap-wysiwyg/bootstrap-wysiwyg.js');
    return theme('mapdesalertes');
}

// préparer la carte des région hors tafta
function tafta_theme() {
    return array("cartehorstafta"=>array(
            'template' => 'cartehorstafta',
            'path' => drupal_get_path('module', 'tafta') . '/templates',
        ));
}

function tafta_preprocess_cartehorstafta(&$variables) {
  drupal_add_css("http://openlayers.org/en/v3.14.2/css/ol.css", array('group' => CSS_DEFAULT, 'every_page' => TRUE));

  drupal_add_js('http://openlayers.org/en/v3.14.2/build/ol.js', 'external');
}

function showcartehorstafta() {
    $module_path = drupal_get_path('module', 'tafta');
  //  drupal_add_js($module_path . '/bootstrap-wysiwyg/bootstrap-wysiwyg.js');
    return theme('cartehorstafta');
}




  /**
   * générer la liste des alertes actives
   */
  function alertes_submissions() {
    
    //  *************    variables utilisées ****************
    
    // le header du tableau des alertes rendues
    $header = [];
    // tableau des alertes rendues
    $rows    = array();
    // liste des gouvernements
    $rowGou = array();
    // liste des municipalités
    $rowMun = array();
    // liste des quartiers
    $rowQua = array();
    // liste des descriptions
    $rowDes = array();
    // liste des dates
    $rowDates = array();
    // nombre d'alertes affiché par page
    $per_page = 10 ; 
    // tableau contenant les états des alertes
    $state = array();
    
    // *************  corp de la fontion  *****************
    $query = db_select('webform_submitted_data', 'al');
    $query
        ->fields('al',array('nid','sid','cid','data'))
        ->condition('nid',array(20,21),'IN')
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    
    $header = array(t('ID'),t('Date alerte'),t('Gouvernorat'),t('Municipalité'),t('Quartier'),t('Description'));
    // récuperer les états des alertes
    $state = get_states();
    
    foreach ($results AS $result) {
       switch ($result->nid) {
         // cas d'une alerte signalé par un alerteur
         case 20:
           if($result->cid == 1){
             $rowGou[] = $result->data;
           }
           if($result->cid == 2){
             $rowMun[] = $result->data;
           }
           if($result->cid == 3){
             $rowQua[] = $result->data;
           }
           if($result->cid == 4){
             $rowDes[] = $result->data;
           }
           if($result->cid == 6){
             $rowDates[] = $result->data;
           }
           break;
         // cas d'une alerte spontannée  
         case 21:
          if($state[$result->sid] == 2){ 
            if($result->cid == 4){
              $rowGou[] = $result->data;
            }
            if($result->cid == 5){
              $rowMun[] = $result->data;
            }
            if($result->cid == 6){
              $rowQua[] = $result->data;
            }
            if($result->cid == 7){
              $rowDes[] = $result->data;
            }
            if($result->cid == 12){
              $rowDates[] = $result->data;
            }
          }
           break;
         default:
           break;
       }
    }
    
    // construire tableau non trié 
    $rows = contruire_tableau_non_trie($rows,$rowGou,$rowMun,$rowQua,$rowDes,$rowDates);
    
    // trier les aletes par date
    $rows = tri_row_date($rows);
    
    //contruire le tableau final trié
    $rows = construire_tableau_trie($rows,$rowGou);
    
    // Initialisation du pager
    $current_page = pager_default_initialize(count($rows), $per_page);
    
    // diviser notre tableau de données en pagers
    $chunks = array_chunk($rows, $per_page, TRUE);
    
    //afficher la table des alertes
    $output = theme('table',array('header'=> $header, 'rows' => $chunks[$current_page]));
    // afficher le pager
    $output .= theme('pager',array('quantity',count($rows)));
    
    return $output;
}

/**
 * afficher les alertes sur la map
 */
function afficher_map_alertes() {
  return '<div id="map">too</div>';
}

/**
   * générer la liste des géolocalisation des alertes actives
   */
  function alertes_geolocation_submissions_tafta() {
    
    //  *************    variables utilisées ****************
    
    // le header des enregistrement
    $header = [];
    // $rows tableau des enregistrements
    
    // liste des types
    $rowType = array();
    // liste des noms des lieux
    $rowNomLieu = array();
    // liste des dates de declarations
    $rowDateDeclaration = array();
    // liste des descriptions
    $rowDescription = array();
    // liste des nom et prenom
    $rowNomPrenom = array();
    // liste des email
    $rowEmail = array();
    // liste des adresse
    $rowAdresse = array();
    // liste des City
    $rowCity = array();
    // liste des Country
    $rowCountry = array();
    // liste des PostalCode
    $rowPostalCode = array();
    // liste des latitudes
    $rowLatitudes = array();
    // liste des longitudes
    $rowLongitudes = array();
    // liste cid
    $rowCid = array();
    //compteur
    $compteur = 0;
    
    // *************  corp de la fontion  *****************
    $query = db_select('webform_submitted_data', 'al');
    $query
        ->fields('al',array('nid','sid','cid','data','no'))
        ->condition('nid',array(4),'IN')
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    
    $header = array(t('Gouvernorat'),t('Municipalité'),t('Latitude'),t('Longitude'));
    
    foreach ($results AS $result) {
           if(!in_array($result->sid, $rowCid)){
             $rowCid[] = $result->sid;
             $compteur++;
           }
           if($result->cid == 1){
             $rowType[$result->sid] = $result->data;
           }
           if($result->cid == 2){
             $rowType[$result->sid] = $result->data;
           }
           if($result->cid == 3){
             $rowNomLieu[$result->sid] = $result->data;
           }
           if($result->cid == 5){
             $rowDateDeclaration[$result->sid] = $result->data;
           }
           if($result->cid == 6){
             $rowDescription[$result->sid] = $result->data;
           }
           if($result->cid == 8){
             $rowNomPrenom[$result->sid] = $result->data;
           }
           if($result->cid == 9){
             $rowEmail[$result->sid] = $result->data;
           }
           if($result->cid == 12){

             if($result->no == 'field_lattitude'){
                $rowLatitudes[$result->sid] = $result->data;
             }
             if($result->no == 'field_longitude'){
                $rowLongitudes[$result->sid] = $result->data;
             }
             if($result->no == 'field_city'){
                $rowCity[$result->sid] = $result->data;
             }
             if($result->no == 'field_country'){
                $rowCountry[$result->sid] = $result->data;
             }
             if($result->no == 'field_postalcode'){
                $rowPostalCode[$result->sid] = $result->data;
             }
             if($result->no == 'field_display'){
                $rowAdresse[$result->sid] = $result->data;
             }
           }
    }
    
    $rows = [
      "rowCid" => $rowCid,
      "rowType" => $rowType,
      "rowNomLieu" => $rowNomLieu,
      "rowDateDeclaration" => $rowDateDeclaration,
      "rowDescription" => $rowDescription,
      "rowNomPrenom" => $rowNomPrenom,
      "rowEmail" => $rowEmail,
      "rowAdresse" => $rowAdresse,
      "rowLatitudes" => $rowLatitudes,
      "rowLongitudes" => $rowLongitudes,
      "rowCity" => $rowCity,
      "rowCountry" => $rowCountry,
      "rowPostalCode" => $rowPostalCode,
      "compteur" => $compteur
        ];
    
    //afficher la table des alertes
    //$output = theme('table',array('header'=> $header, 'rows' => $rows));
    header('Content-Type: application/json');
    echo json_encode($rows);
}

  /**
   * générer la liste des géolocalisation des alertes actives
   */
  function alertes_geolocation_submissions() {
    
    //  *************    variables utilisées ****************
    
    // le header du tableau des alertes rendues
    $header = [];
    // tableau des alertes rendues
    $rows    = array();
    // liste des gouvernements
    $rowGou = array();
    // liste des municipalités
    $rowMun = array();
    // liste des descriptions
    $rowDes = array();
    // liste des géolocalisations
    $rowGeo = array();
    // liste des latitudes
    $rowLat = array();
    // liste des longitudes
    $rowLon = array();
    // tableau contenant les états des alertes
    $state = array();
    
    // *************  corp de la fontion  *****************
    $query = db_select('webform_submitted_data', 'al');
    $query
        ->fields('al',array('nid','sid','cid','data'))
        ->condition('nid',array(20,21),'IN')
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    
    $header = array(t('Gouvernorat'),t('Municipalité'),t('Latitude'),t('Longitude'));
    // récuperer les états des alertes
    $state = get_states();
    
    foreach ($results AS $result) {
       switch ($result->nid) {
         // cas d'une alerte signalé par un alerteur
         case 20:
           if($result->cid == 1){
             $rowGou[] = $result->data;
           }
           if($result->cid == 2){
             $rowMun[] = $result->data;
           }
           if($result->cid == 5){
             $rowGeo[] = $result->data;
           }
           break;
         // cas d'une alerte spontannée  
         case 21:
          if($state[$result->sid] == 2){ 
            if($result->cid == 4){
              $rowGou[] = $result->data;
            }
            if($result->cid == 5){
              $rowMun[] = $result->data;
            }
            if($result->cid == 11){
              $rowGeo[] = $result->data;
            }
          }
           break;
         default:
           break;
       }
    }
    
    // construire le tableau des latitudes
    $rowLat = get_latitude($rowGeo);
    
    // construire le tableau des longitudes
    $rowLon = get_longitude($rowGeo);
    
    // construire tableau non trié 
    $rows = contruire_tableau_non_trie_geo($rows,$rowGou,$rowMun,$rowLat,$rowLon);
    
    
    //afficher la table des alertes
    //$output = theme('table',array('header'=> $header, 'rows' => $rows));
    header('Content-Type: application/json');
    echo json_encode($rows);
}

/**
 * construire le tableau des longitude
 */
function get_longitude($rowGeo) {
  $longueur = sizeof($rowGeo);
  for ($i = 0; $i < $longueur; $i++){
    $tableau[] = getLongitude($rowGeo[$i]);
  }
  return $tableau;
}
/**
 * récuperer la longitude d'une géoadresse
 */
function getLongitude($geoadresse) {
  $longitude = "";
  $debut = strpos($geoadresse,"(")+1;
  $fin = strrpos($geoadresse," ");
  for ($i = $debut; $i < $fin; $i++){
    $longitude.= $geoadresse[$i];
  }
  return $longitude;
}
/**
 * construire le tableau des latitude
 */
function get_latitude($rowGeo) {
  $longueur = sizeof($rowGeo);
  for ($i = 0; $i < $longueur; $i++){
    $tableau[] = getLatitude($rowGeo[$i]);
  }
  return $tableau;
}
/**
 * récuperer la latitude d'une géoadresse
 */
function getLatitude($geoadresse) {
  $latitude = "";
  $debut = strrpos($geoadresse," ")+1;
  $fin = strpos($geoadresse,")");
  for ($i = $debut; $i < $fin; $i++){
    $latitude.= $geoadresse[$i];
  }
  return $latitude;
}

/**
 * contruire le tableau non trié résumé
 */
function contruire_tableau_non_trie_resume($rows,$rowGou,$rowMun,$rowDates) {
  // si la liste des alertes est vide
    if($rowGou == NULL){
         $rows [] = array("Aucune alerte n'a été soumise","","","","","");
    // si on a des alertes     
    }else{
      // construction de la table des alertes
      $longuer_tableau = sizeof($rowGou); 
      for ($i = 0; $i < $longuer_tableau; $i++) {
            $rows[] = array(
            $rowDates[$i],   
            $rowGou[$i],
            $rowMun[$i],
          );
      }
    }
  return $rows;
}
/**
 * contruire le tableau non trié
 */
function contruire_tableau_non_trie($rows,$rowGou,$rowQua,$rowDes,$rowDates) {
  // si la liste des alertes est vide
    if($rowGou == NULL){
         $rows [] = array("Aucune alerte n'a été soumise","","","","","");
    // si on a des alertes     
    }else{
      // construction de la table des alertes
      $longuer_tableau = sizeof($rowGou); 
      for ($i = 0; $i < $longuer_tableau; $i++) {
            $rows[] = array(
            $rowDates[$i],   
            //sizeof($rowGou) - $i,  
            $rowGou[$i],
            $rowMun[$i],
            $rowQua[$i], 
          );
      }
    }
  return $rows;
}
/**
 * contruire le tableau non trié avec des geolocalisation
 */
function contruire_tableau_non_trie_geo($rows,$rowGou,$rowMun,$rowLat,$rowLon) {
  // si la liste des alertes est vide
    if($rowGou == NULL){
         $rows [] = array("Aucune alerte n'a été soumise","","","","","");
    // si on a des alertes     
    }else{
      // construction de la table des alertes
      $longuer_tableau = sizeof($rowGou); 
      for ($i = 0; $i < $longuer_tableau; $i++) {
            $rows[] = array( 
            'gouvernorat' => $rowGou[$i],
            'municipalite' => $rowMun[$i], 
            'latitude' => $rowLat[$i],
            'longitude' => $rowLon[$i],  
          );
      }
    }
  return $rows;
}

/**
 * trier les alertes par date
 */
function tri_row_date($row) {
  array_multisort($row, SORT_DESC);
  return $row;
}

/**
 * construire tableau final trié
 */
function construire_tableau_trie($rows,$rowGou) {
  if($rowGou == NULL){
         $rows [] = array("Aucune alerte n'a été soumise","","","","","");
    // si on a des alertes     
    }else{
      // construction de la table des alertes
      $longuer_tableau = sizeof($rowGou);
      for ($i = 0; $i < $longuer_tableau; $i++) {
          $rows[$i][5] = $rows[$i][4];
          $rows[$i][4] = $rows[$i][3];
          $rows[$i][3] = $rows[$i][2];
          $rows[$i][2] = $rows[$i][1];
          $rows[$i][1] = $rows[$i][0];
          $rows[$i][0] = $longuer_tableau - $i;
      }
    }
    return $rows;
}

/**
 * générer la liste des alertes désactivées
 */
function alertes_submissions_desactive() {
    
    //  *************    variables utilisées ****************
    
    // le header du tableau des alertes rendues
    $header = [];
    // tableau des alertes rendues
    $rows    = array();
    // liste des gouvernements
    $rowGou = array();
    // liste des municipalités
    $rowMun = array();
    // liste des quartiers
    $rowQua = array();
    // liste des descriptions
    $rowDes = array();
    // liste des dates
    $rowDates = array();
    // nombre d'alertes affiché par page
    $per_page = 10 ; 
    // tableau contenant les états des alertes
    $state = array();
    // tableau contenant les sid des alertes
    $rowSid = array();
    
    // *************  corp de la fontion  *****************
    $query = db_select('webform_submitted_data', 'al');
    $query
        ->fields('al',array('nid','sid','cid','data'))
        ->condition('nid',array(21),'IN')
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    
    $header = array(t('ID'),t('Gouvernorat'),t('Municipalité'),t('Quartier'),t('Date'),t('Description'),t('Action'));
    // récuperer les états des alertes
    $state = get_states();
    
    foreach ($results AS $result) {
       switch ($result->nid) {
         // cas d'une alerte spontannée  
         case 21:
          if($state[$result->sid] == 1){ 
            if(!in_array($result->sid, $rowSid)){
                $rowSid[] = $result->sid ;
            }
            if($result->cid == 4){
              $rowGou[] = $result->data;
            }
            if($result->cid == 5){
              $rowMun[] = $result->data;
            }
            if($result->cid == 6){
              $rowQua[] = $result->data;
            }
            if($result->cid == 7){
              $rowDes[] = $result->data;
            }
            if($result->cid == 12){
              $rowDates[] = $result->data;
            }
          }
           break;
         default:
           break;
       }
    }
    
    // si la liste des alertes est vide
    if($rowGou == NULL){
         $rows [] = array("Aucne alerte n'a été soumise","","","","","");
    // si on a des alertes à activer     
    }else{
      // construction de la table des alertes
      for ($i = 0; $i < sizeof($rowGou); $i++) {
            $rows[] = array(
            sizeof($rowGou) - $i,  
            $rowGou[$i],
            $rowMun[$i],
            $rowQua[$i],
            $rowDates[$i],  
            $rowDes[$i], 
            "<a href='changeretat/".$rowSid[$i]."/editetat'><input type='button' class='btn btn-success' value='Activer'></a>",  
            "<a href='changeretat/".$rowSid[$i]."/delete'><input type='button' class='btn btn-danger' value='Supprimer'></a>"  
                    );
      }
    }
    
    // Initialisation du pager
    $current_page = pager_default_initialize(count($rows), $per_page);
    
    // diviser notre tableau de données en pagers
    $chunks = array_chunk($rows, $per_page, TRUE);
    
    //afficher la table des alertes
    $output = theme('table',array('header'=> $header, 'rows' => $chunks[$current_page]));
    // afficher le pager
    $output .= theme('pager',array('quantity',count($rows)));
    
    return $output;
}

/**
 * access callback pour les alertes désactivées
 */

function alerteslistuserdesactive_access($param) {
  global $user ;
  if(in_array('administrateur des alertes', $user->roles) || in_array('administrator', $user->roles) ){
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * récuperer les états des alertes
 */

function get_states() {
    $state = array();
    $query = db_select('webform_workflow_submissions', 'al');
    $query
        ->fields('al',array('sid','wsid'))
        ->orderBy('sid','DESC');
    
    $results = $query->execute();
    foreach ($results AS $result) {
      $state[$result->sid] = $result->wsid;
    }
    
    return $state;
}

/**
 * activer une alerte
 */
function alerte_activer($sid) {
    global $base_url;
    $query = db_update('webform_workflow_submissions')
             ->fields(array('wsid' => 2))
             ->condition('sid',array($sid),'IN');
    
    if($results = $query->execute()){
      header('Location: '.$base_url.'/fr/alerteslistuserdesactive');
    }else{
      echo "error activation";
    }
    
}

/**
 * supprimer une alerte
 */
function alerte_supprimer($sid) {
    global $base_url;
    $txn = db_transaction();
    
    try{
    
    // effacer l'etat de l'alerte de la base  
    $query = db_delete('webform_workflow_submissions')
             ->condition('sid',$sid);
    $query->execute();
    
    // effacer l'alerte de la base
    $query = db_delete('webform_submitted_data')
             ->condition('sid',$sid);
    $query->execute();
    
    }catch(Exception $e){
      // annuler les transactions
      $txn->rollback();
      // Log the exception to watchdog
      watchdog_exception('type', $e);
    }
    
    // redirection vers notre liste d'alertes
    header('Location: '.$base_url.'/fr/alerteslistuserdesactive');
   
}

/**
 * les alertes de l'utilisateur authentifé
 */
function alerte_user() {
  // le header du tableau des alertes rendues
  $header = [];
  // tableau des alertes rendues
  $rows   = array();
  // liste des gouvernements
  $rowGou = array();
  // liste des municipalités
  $rowMun = array();
  // liste des quartiers
  $rowQua = array();
  // liste des descriptions
  $rowDes = array();
  // nombre d'alertes affiché par page
  $per_page = 10 ; 
  
  $header = array(t('ID'),t('Gouvernorat'),t('Municipalité'),t('Quartier'),t('Description'));
  
  $sid = get_mySubmissionsSid(); 
  
  // si l'utilisateur courant a des alertes 
  if($sid != FALSE) { 
    for ($i = 0; $i < sizeof($sid); $i++){
      // les submissions de l'utilisateur courant  
      $query = db_select('webform_submitted_data', 'al');
      $query
          ->fields('al',array('cid','data'))
          ->condition('sid',$sid[$i])
          ->condition('nid',array(20),'IN');
    
      $results = $query->execute(); 
  
      foreach ($results AS $result) {  
        if($result->cid == 1){
          $rowGou[] = $result->data;
        }
        if($result->cid == 2){
          $rowMun[] = $result->data;
        }
        if($result->cid == 3){
          $rowQua[] = $result->data;
        }
        if($result->cid == 4){
          $rowDes[] = $result->data;
        }  
      }   
    }
  }
// si la liste des alertes est vide
    if($rowGou == NULL){
         $rows [] = array("no alert submitted","","","","","");
    // si on a des alertes à activer     
    }else{
      // construction de la table des alertes
      for ($i = 0; $i < sizeof($rowGou); $i++) {
            $rows[] = array(
            sizeof($rowGou) - $i,  
            $rowGou[$i],
            $rowMun[$i],
            $rowQua[$i],
            $rowDes[$i]
          );
      }
    }
    
    // Initialisation du pager
    $current_page = pager_default_initialize(count($rows), $per_page);
    
    // diviser notre tableau de données en pagers
    $chunks = array_chunk($rows, $per_page, TRUE);
    
    //afficher la table des alertes
    $output = theme('table',array('header'=> $header, 'rows' => $chunks[$current_page]));
    // afficher le pager
    $output .= theme('pager',array('quantity',count($rows)));
    
    return $output;  
  
}

/**
 * les submissions de l'utilisateur courant
 */
function get_mySubmissionsSid() {
  
  
  // récupératuin de l'uid de l'utilisateur courant
  global $user;
  $uid = $user->uid;
  $sid = [];      
  // les submissions de l'utilisateur courant  
  $query = db_select('webform_submissions', 'al');
  $query
      ->fields('al',array('sid'))
      ->condition('uid',$uid)
      ->condition('nid',array(20),'IN')
      ->orderBy('sid','DESC');
    
  // les sid des submissions
  $results = $query->execute();
  foreach ($results AS $result) {
    $sid[] = $result->sid ;
  }
  
  if ($sid == NULL) return FALSE;
  
  return $sid;

  
  }














function alertes_edit_form($form, &$form_state) {
  
 $form['price'] = array(
    '#type' => 'textfield', //you can find a list of available types in the form api
    '#title' => 'What is Your Price?',
    '#size' => 10,
    '#maxlength' => 10,
    '#required' => TRUE, //make this field required 
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Click Here!'),
  );
  
  return $form;
}    
function alertes_edit_form_validate($form, &$form_state) {
}

function alertes_edit_form_submit($form, &$form_state) {
}